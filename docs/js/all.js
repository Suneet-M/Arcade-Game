"use strict";!function(){var n={},i=[];function t(e){if(n[e])return n[e];var t=new Image;t.onload=function(){n[e]=t,s()&&i.forEach(function(e){e()})},n[e]=!1,t.src=e}function s(){var e=!0;for(var t in n)n.hasOwnProperty(t)&&!n[t]&&(e=!1);return e}window.Resources={load:function(e){e instanceof Array?e.forEach(function(e){t(e)}):t(e)},get:function(e){return n[e]},onReady:function(e){i.push(e)},isReady:s}}();var Engine=function(e){var n,i,t=e.document,s=e.window,r=t.createElement("canvas"),o=r.getContext("2d");function a(){var t,e=Date.now();t=(e-n)/1e3,allEnemies.forEach(function(e){e.update(t)}),function(){var e,t,n=["img/water-block.png","img/stone-block.png","img/stone-block.png","img/stone-block.png","img/grass-block.png","img/grass-block.png"];for(o.clearRect(0,0,r.width,r.height),e=0;e<6;e++)for(t=0;t<5;t++)o.drawImage(Resources.get(n[e]),101*t,83*e);allEnemies.forEach(function(e){e.render()}),player.render()}(),n=e,player.win||player.lose?s.cancelAnimationFrame(i):i=s.requestAnimationFrame(a)}return r.width=505,r.height=600,document.querySelector(".canvas-container").appendChild(r),Resources.load(["img/stone-block.png","img/water-block.png","img/grass-block.png","img/enemy-bug.png","img/char-boy.png"]),Resources.onReady(function(){n=Date.now(),a()}),e.ctx=o,{start:a}}(window);function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var Enemy=function(){function i(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:-120;_classCallCheck(this,i),this.sprite="img/enemy-bug.png",this.startX=n,this.x=this.startX,this.y=t,this.sp=e,this.random=100}return _createClass(i,[{key:"update",value:function(e){this.x+=this.sp*this.random*e,520<=this.x&&(this.x=this.startX,this.random=100*Math.random()+100),checkCollision(this),checkWin()}},{key:"render",value:function(){ctx.drawImage(Resources.get(this.sprite),this.x,this.y)}},{key:"endX",get:function(){return this.x+tileWidth}},{key:"endY",get:function(){return this.y+tileHeight}}]),i}(),Player=function(){function e(){_classCallCheck(this,e),this.sprite="img/char-boy.png",this.startX=200,this.startY=375,this.x=this.startX,this.y=this.startY,this.win=!1,this.lose=!1}return _createClass(e,[{key:"render",value:function(){ctx.drawImage(Resources.get(this.sprite),this.x,this.y)}},{key:"handleInput",value:function(e){switch(e){case"left":-2===this.x||(this.x-=tileWidth);break;case"up":-40===this.y||(this.y-=tileHeight);break;case"down":375===this.y||(this.y+=tileHeight);break;case"right":402===this.x||(this.x+=tileWidth)}}},{key:"feetY",get:function(){return this.y+tileHeight}},{key:"feetX",get:function(){return this.x+tileWidth/2}}]),e}(),allEnemies=[new Enemy(1.5,64),new Enemy(3,64,-550),new Enemy(6,64,-1e3),new Enemy(2,147),new Enemy(1.2,147,-200),new Enemy(3,147,-800),new Enemy(1,230),new Enemy(2.2,230,-450)],player=new Player,tileWidth=101,tileHeight=83;function checkCollision(e){player.feetX<=e.endX&&player.feetX>=e.x&&player.feetY<=e.endY&&player.feetY>=e.y&&(resetPlayer(),reduceLives())}function resetPlayer(){player.x=player.startX,player.y=player.startY}document.addEventListener("keyup",function(e){player.handleInput({37:"left",38:"up",39:"right",40:"down"}[e.keyCode])}),document.querySelector(".arrow-keys").addEventListener("click",function(e){var t=e.target.dataset.direction;player.handleInput(t)}),document.querySelector(".restart").addEventListener("click",resetGame);var lives=Array.from(document.querySelectorAll(".fa-heart")),i=lives.length;function reduceLives(){lives[--i].classList.remove("fas"),lives[i].classList.add("far"),checkLose()}function checkWin(){-40==player.y&&gameWin()}function gameWin(){player.win=!0,num=0,showModal()}function checkLose(){0==i&&gameLose()}function gameLose(){player.lose=!0,num=1,showModal()}function resetLives(){for(i=0;i<lives.length;i++)lives[i].classList.add("fas")}function resetGame(){player.win=!1,player.lose=!1,resetPlayer(),resetLives(),hideModal(),Engine.start()}var num,modalBack=document.querySelector(".modal-back"),modalBody=Array.from(document.querySelectorAll(".modal-body")),closeButtons=Array.from(document.querySelectorAll(".close")),resetButtons=Array.from(document.querySelectorAll(".reset"));function showModal(){modalBack.classList.add("show"),modalBody[num].classList.add("show"),0==num?modalBody[num].classList.add("tada"):modalBody[num].classList.add("wobble"),document.querySelector(".content").innerHTML=document.querySelector(".score-panel").innerHTML,toggleListeners("on"),resetButtons[num].focus()}function hideModal(){modalBody[num].classList.add("bounceOut"),setTimeout(function(){modalBody[num].classList.remove("show","tada","wobble","bounceOut"),modalBack.classList.remove("show")},780),toggleListeners("off")}function toggleListeners(e){switch(e){case"on":closeButtons[num].addEventListener("click",hideModal),resetButtons[num].addEventListener("click",resetGame);break;case"off":closeButtons[num].removeEventListener("click",hideModal),resetButtons[num].removeEventListener("click",resetGame)}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
